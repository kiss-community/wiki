Wayland
________________________________________________________________________________

Wayland [0] is a display protocol that aims to be a simpler and more modern
replacement for the X Window System. The Wayland protocol follows a
clientâ€“server model in which clients are the graphical applications requesting
the display of pixel buffers on the screen, and the server (compositor) is the
service provider controlling the display of these buffers.

Wayland provides useful improvements over X11, including better multimonitor and
HiDPI support [1], no screen tearing [2], and hardware accelerated video [3].

Wayland has been in development since September of 2008 and is usable today for
a large number of use-cases. Some hardware configurations (namely NVIDIA GPUs)
[4] are poorly supported, though this is changing! See [5]. However, Wayland is
seeing increased adoption in much larger projects, including GNOME [6] and KDE
[7]. There is also work to make Firefox run on Wayland-only systems [8], and
Chromium can already be fully built without Xorg libraries using Ozone [9]. If
all you need is a web browser, a terminal, and dmenu, Wayland can work quite
well for you.

Because KISS does not support Wayland, users will have to use others'
repositories or maintain their own. Luckily, many of the dependencies for
Wayland are packaged in the main repositories, and only require some minimal
tweaking in the build scripts to add Wayland support.

Several user repositories already exist which provide Wayland packages,
including $/Himmalerin/kiss-wayland and $/dilyn-corner/KISS-me

Here is a list of packages you'll need when using Wayland:

+---------------+--------------------------------------------------------------+
| Package       | Option                                                       |
+---------------+--------------------------------------------------------------+
| mesa          | Add 'wayland' to -Dplatforms                                 |
| gtk+3         | Add --enable-wayland=true                                    |
| falkon        | Add -DNO_X11=TRUE                                            |
| firefox       | Change --default-toolkit to cairo-gtk3-wayland               |
| chromium      | Add ozone_platform_wayland=true                              |
| xorg-server   | Add --enable-xwayland                                        |
| libxkbcommon  | Add -Denable-wayland=true                                    |
+---------------+--------------------------------------------------------------+

Because Wayland is merely a protocol, it is up to a given developer what support
their Wayland compositor implementations. As a result, supported features can
vary between any two compositors. The most common implementation is wlroots. An
alternative to wlroots is swc. See @/wlroots and @/swc for more information.

Additionally, if a package requires X to run, it's possible to do so under
Wayland utilizing Xwayland. The decision of whether or not to use Xwayland will
rely on the software needs of each user. Checkout [15] for a list of Wayland
software to see if you'll need it! See @/xwayland or @/xorgless for more.


References
________________________________________________________________________________

[0]  https://wayland.freedesktop.org/
[1]  https://www.phoronix.com/scan.php?page=news_item&px=OTA5Mg
[2]  https://people.freedesktop.org/~daniels/lca2013-wayland-x11.pdf
[3]  https://bugzilla.mozilla.org/show_bug.cgi?id=1610199
[4]  $/swaywm/sway/issues/490
[5]  https://wiki.gnome.org/Initiatives/Wayland/NVIDIA
[6]  https://wiki.gnome.org/Initiatives/Wayland
[7]  https://kde.org/announcements/plasma/5/5.21.0/
[8]  https://bugzilla.mozilla.org/show_bug.cgi?id=1661450
[9]  https://blogs.igalia.com/msisov/2020/11/20/chrome-chromium-on-wayland-the-waylandification-project/
[10]  $/swaywm/sway/wiki#before-installing
[11]  $/swaywm/wlroots/pull/2393
[12]  $/natpen/awesome-wayland
[13]  https://hansdegoede.livejournal.com/22212.html
[14]  $/swaywm/sway/wiki/Running-Sway-without-systemd
[15]  https://arewewaylandyet.com
